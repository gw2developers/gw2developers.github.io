{"title":"Ruby Example","pubDate":"2013-05-21T14:55:24.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Ruby-Example","comments":[{"pubDate":"2013-05-21T19:26:10.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Ruby-Example/2069130","author":"Naranek.2570","body":"\n<p>Just an update, more example code, nothing fancy.</p>\n<p>BTW, I wish they didn’t put arrays inside hashes inside more hashes when you retrieve the item_details hash, also arrays with keys and arrays without keys….. not cool anet! not cool! &gt;.&gt;</p>","arenanet":false},{"pubDate":"2013-05-21T15:16:23.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Ruby-Example/2067782","author":"Killer Rhino.6794","body":"\n<p>cool. thanks for sharing!</p>","arenanet":false},{"pubDate":"2013-05-21T14:55:24.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Ruby-Example/2067656","author":"Naranek.2570","body":"\n<p>EDIT: I just did more code to share so I’ll just update this post atm :-)<br>\nNOTE: run this on IRB so you can track the code easier<br>\nNOTE2: You want json gem (gem install json)</p>\n<p>WARNING I’m trusting all SSL certs, you should NOT do that if you want to do something bigger. If I have the time I may post how to get their certs and use them in the right way. WARNING</p>\n<p>I was just testing the API with ruby and this is a basic idea of how to get access to it:</p>\n<p>=SIMPLE TEST=</p>\n<p>require ’net/http’<br>\nrequire ’net/https’<br>\nuri = URI.parse(“<a href=\"https://api.guildwars2.com/\">https://api.guildwars2.com/</a>”)<br>\nhttp = Net::HTTP.new(uri.host, uri.port)<br>\nhttp.use_ssl = true<br>\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE<br>\nhttp.get(“/v1/items.json”)<br>\nresponse = http.get(“/v1/items.json”)<br>\nresponse.body</p>\n<p>==MORE CODE (print item_details)=</p>\n<pre><code>\nrequire 'net/http'\nrequire 'net/https'\nrequire 'json'\n\n#Just some paths I'll use\nitems_list =   \"/v1/items.json\"\nitem_details = \"/v1/item_details.json?item_id=\"\n\n#I need this method to recurse through the item_details hash, need better formating\ndef item_details_print(item_details)\n  if item_details.is_a?(Hash) || item_details.is_a?(Array) then\n    item_details.each do |key, value|\n      if value.nil?\n        puts \"    #{value}\"\n        item_details_print(key)\n      else\n        print \"#{key} : \"\n        item_details_print(value)\n      end\n    end\n  else\n    print \"#{item_details} \\n\"\n  end\nend\n\n\n#Connection to the API server\nuri = URI.parse(\"https://api.guildwars2.com/\")\nhttp = Net::HTTP.new(uri.host, uri.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\n\n##JSON to Ruby hash: items.json\nresponse_list = JSON.parse(http.get(items_list).body)\n\n#Print the first item. Just uncomment the puts\n#WARNING: do not do a response[\"items\"] on a console\n#It will take forever to print it on the screen sometimes.\nputs response_list[\"items\"][1]\n\n#Ok, we have the items list, details now!\ndetails = item_details + response_list[\"items\"][1].to_s\nresponse_details = JSON.parse(http.get(details).body)\n\n#Lets see thoses details\nitem_details_print(response_details)\n</code></pre>\n<p>===<br>\nI’ll probably be doing some more code, I kinda want a “console” program when playing since my 3rd screen is a linux machine :D</p>\n<p>I’ll post around here if I do more.</p>\n<p>Happy coding!</p>","arenanet":false}]}