{"title":"Possible issue with \"buff\" property","pubDate":"2013-05-23T00:45:19.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Possible-issue-with-buff-property","comments":[{"pubDate":"2013-05-24T11:50:59.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Possible-issue-with-buff-property/2084092","author":"zwei.9073","body":"\n<blockquote><div class=\"citey\"><cite title=\"Posted on May 23 2013 10:48PM\"><a href=\"/forum/community/api/Possible-issue-with-buff-property/2081222\">Cliff Spradlin.3512:</a></cite></div><div class=\"quotey\"><p>Maybe instead, I’ll remove the ‘null’ properties from being returned at all, and instead have a list of example items that use all the possible properties, per item type. Then developers can examine that list to figure out the properties they need to support.</p>\n<p>How does that sound?</p></div></blockquote>\n<p>That would be incredibly helpfull and awesome</p>","arenanet":false},{"pubDate":"2013-05-23T23:03:47.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Possible-issue-with-buff-property/2081311","author":"noobinator.3816","body":"\n<p>Cliff, thanks for the response.</p>\n<p>At this point, I already have the parsing all figured out and working for the item_details API using Jackson. It was a bit “hacky,” but was definitely quicker than manually writing the property-by-property parser by hand.  If the empty objects were returned as nulls, empty curly braces, or not at all, that would greatly simplify my code.</p>\n<p>Also, it would be great to have sample objects that way.  This would greatly simplify development.</p>\n<p>Thanks again!</p>","arenanet":false},{"pubDate":"2013-05-23T22:48:52.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Possible-issue-with-buff-property/2081222","author":"Cliff Spradlin.3512","body":"\n<p>Hi,</p>\n<p>I don’t have much experience using JSON libraries that map to strongly-typed objects. We didn’t really design the API in mind with that use-case, so I’m not surprised that there are places where it breaks or doesn’t make sense.</p>\n<p>Is it possible for you to use a more dynamically typed parser? If so, that may save you a lot of pain in the long-term.</p>\n<p>The buff is supposed to be ‘null’, not an empty string, but it’s getting automatically converted in a backend server to be an empty string. My goal in specifying those types of properties was to make items more self-describing, so that you didn’t have to hunt through every item to try to figure out all the possible fields.</p>\n<p>Maybe instead, I’ll remove the ‘null’ properties from being returned at all, and instead have a list of example items that use all the possible properties, per item type. Then developers can examine that list to figure out the properties they need to support.</p>\n<p>How does that sound?</p>","arenanet":true},{"pubDate":"2013-05-23T00:45:19.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Possible-issue-with-buff-property/2076003","author":"noobinator.3816","body":"\n<p>Let me start off by saying that this API is great. Thank you so much for it!</p>\n<p>I’m in the process of writing an Android app to interact with the API and do cool things (like everyone else on this forum).  Unfortunately, I’ve run into a bit of a snag.  Usually, when parsing JSON, I just use Google GSON, but occasionally I run into minor issues that end up complicating things.</p>\n<p>In particular, item_detail objects which are weapons, have a buff property (item_detail-&gt;weapon-&gt;infix_upgrade-&gt;buff).  In cases where the infix_upgrade has a buff, it is a JSON object, however, if the buff does not exist, then it is a String.</p>\n<p>For example, <a href=\"https://api.guildwars2.com/v1/item_details.json?item_id=38875\">Item 38875</a> has a buff, while <a href=\"https://api.guildwars2.com/v1/item_details.json?item_id=26706\">item 26706</a> does not have a buff.</p>\n<p>This causes problems for Google GSON and possibly other parsers.  So, I have a few questions:</p>\n<p>1. Is this an actual defect that should be fixed or do I just need to use a different parser?  I’ve found a work around for the time being, but I would like to not have to use it as it will slow down my app.<br>\n2. Is this going to be a recurring theme with the API (that is, objects are either present or are Strings, but are never empty or null)?</p>\n<p>EDIT: After some more digging, it seems like this is going to be a recurring theme as I’m now running into the same problem with the infix_upgrade itself.</p>\n<p>EDIT2: I switched over to using Jackson to parse the data into my objects, but it dislikes this “feature” too.</p>","arenanet":false}]}