{"title":"Exposing custom headers for CORS","pubDate":"2015-03-03T06:50:03.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Exposing-custom-headers-for-CORS","comments":[{"pubDate":"2015-08-12T08:40:38.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Exposing-custom-headers-for-CORS/5374196","author":"RedGlow.2715","body":"\n<blockquote><div class=\"citey\"><cite title=\"Posted on August 11 2015 04:23PM\"><a href=\"/forum/community/api/Exposing-custom-headers-for-CORS/5371770\">Lawton Campbell.8517:</a></cite></div><div class=\"quotey\"><blockquote><div class=\"citey\"><cite title=\"Posted on August 11 2015 08:05AM\"><a href=\"/forum/community/api/Exposing-custom-headers-for-CORS/5370592\">RedGlow.2715:</a></cite></div><div class=\"quotey\"><p>Lately I’ve tried using the Authorization header instead of the query parameter in order to send an authorized request to some API endpoints – tokeninfo in this specific instance.</p></div></blockquote>\n<p>Due to the way our backend works, we don’t support OPTIONS requests at all.</p>\n<p>As a workaround, you should pass the API key via the ?access_token query parameter, e.g.</p>\n<p>GET /v2/tokeninfo?access_token=$APIKEY</p>\n<p>(Making better documentation is on my todo list ;_;)</p></div></blockquote>\n<p>Oh, very well! I just thought the Authorization header seemed like a cleaner way to proceed, but I’ll just keep on using the access_token query parameter then :-)</p>\n<p>In the meanwhile, I’ve added a paragraph in the API key page explaining the two possible alternatives and the problem here stated: <a href=\"http://wiki.guildwars2.com/wiki/API:API_key\">http://wiki.guildwars2.com/wiki/API:API_key</a>. (I hope the wiki masters won’t punish me because I’ve put the information in the wrong place, or with the wrong formatting, or anything else of the like ;-D)</p>","arenanet":false},{"pubDate":"2015-08-11T16:37:22.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Exposing-custom-headers-for-CORS/5371826","author":"smiley.1438","body":"\n<blockquote><div class=\"citey\"><cite title=\"Posted on August 11 2015 08:05AM\"><a href=\"/forum/community/api/Exposing-custom-headers-for-CORS/5370592\">RedGlow.2715:</a></cite></div><div class=\"quotey\"><p>(apparently the presence of the Authorization header prompts the library/browser to preflight the request, and I don’t know enough of CORS to say if this is correct or not)</p></div></blockquote>\n<p>Just to add: you are right here. If there’s a custom header set, a preflight request is being sent in order to determine if the main request is safe to send.</p>\n<p>See <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS#Preflighted_requests\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS#Preflighted_requests</a></p>","arenanet":false},{"pubDate":"2015-08-11T16:23:04.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Exposing-custom-headers-for-CORS/5371770","author":"Lawton Campbell.8517","body":"\n<blockquote><div class=\"citey\"><cite title=\"Posted on August 11 2015 08:05AM\"><a href=\"/forum/community/api/Exposing-custom-headers-for-CORS/5370592\">RedGlow.2715:</a></cite></div><div class=\"quotey\"><p>Lately I’ve tried using the Authorization header instead of the query parameter in order to send an authorized request to some API endpoints – tokeninfo in this specific instance.</p></div></blockquote>\n<p>Due to the way our backend works, we don’t support OPTIONS requests at all.</p>\n<p>As a workaround, you should pass the API key via the ?access_token query parameter, e.g.</p>\n<p>GET /v2/tokeninfo?access_token=$APIKEY</p>\n<p>(Making better documentation is on my todo list ;_;)</p>","arenanet":true},{"pubDate":"2015-08-11T09:22:49.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Exposing-custom-headers-for-CORS/5370737","author":"smiley.1438","body":"\n<p>Simply put: preflight requests are not supported. Thats why the access_token parameter exists in first place.</p>","arenanet":false},{"pubDate":"2015-08-11T08:05:33.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Exposing-custom-headers-for-CORS/5370592","author":"RedGlow.2715","body":"\n<p>Hello!</p>\n<p>I’m also working with the APIs and Angular.</p>\n<p>Lately I’ve tried using the Authorization header instead of the query parameter in order to send an authorized request to some API endpoints – tokeninfo in this specific instance.</p>\n<p>It seems to me that the situation is not really working yet: when the browser launches an OPTIONS request (apparently the presence of the Authorization header prompts the library/browser to preflight the request, and I don’t know enough of CORS to say if this is correct or not), the tokeninfo endpoint replies with a 404 (?).</p>\n<p>May it help if I open a ticket on GitHub?</p>","arenanet":false},{"pubDate":"2015-03-05T13:50:05.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Exposing-custom-headers-for-CORS/4850036","author":"levionan.8506","body":"\n<p>That’s sweet. Thanks!</p>","arenanet":false},{"pubDate":"2015-03-04T20:52:44.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Exposing-custom-headers-for-CORS/4848206","author":"Pat Cavit.9234","body":"\n<p>Hah, Lawton beat me to it. This is on dev now, we’ll bang on it for a bit &amp; make sure it’s good.</p>","arenanet":true},{"pubDate":"2015-03-03T20:59:27.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Exposing-custom-headers-for-CORS/4845228","author":"Pat Cavit.9234","body":"\n<p>Oof, good point. We’ll get it onto the backlog.</p>","arenanet":true},{"pubDate":"2015-03-03T06:50:04.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Exposing-custom-headers-for-CORS/4843525","author":"levionan.8506","body":"\n<p>Hi,</p>\n<p>I was trying out GW2 API using AngularJS (a Javascript framework) and I’m encountering an issue with respect to accessing the custom headers (e.g. X-Page-Size, X-Page-Total, etc) in the HTTP response.</p>\n<p>Basically, the API server does not explicitly include the <strong>Access-Control-Expose-Headers</strong> in its response. The link below explains it better.</p>\n<p>Refer: <a href=\"http://stackoverflow.com/questions/18124483/angularjs-ignoring-some-headers\">http://stackoverflow.com/questions/18124483/angularjs-ignoring-some-headers</a></p>","arenanet":false}]}