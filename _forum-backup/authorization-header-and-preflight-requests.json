{"title":"authorization header and preflight requests","pubDate":"2015-06-17T20:29:30.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/authorization-header-and-preflight-requests","comments":[{"pubDate":"2015-06-26T19:44:59.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/authorization-header-and-preflight-requests/5216533","author":"Lawton Campbell.8517","body":"\n<blockquote><div class=\"citey\"><cite title=\"Posted on June 18 2015 08:31AM\"><a href=\"/forum/community/api/authorization-header-and-preflight-requests/5167341\">smiley.1438:</a></cite></div><div class=\"quotey\"><p>However, you should avoid to use the API key via frontend scripting languages (as in JavaScript). Keep in mind that it is basically the OAuth2 access token which is intended to be used between the app`s backend and the gw2 API server.</p></div></blockquote>\n<p>Eh, it’s not that big of a deal with the current API keys. With OAuth2, the access token was tied to the application so that e.g., an application could be billed or rate-limited. As such, OAuth2 applications need to ensure they never leak the access token to the user because that would allow the user to pretend they’re the application and make requests using that application’s credentials.</p>\n<p>Since API keys aren’t tied to applications, there’s no need for an application to prevent the user from getting access to them.</p>","arenanet":true},{"pubDate":"2015-06-26T16:25:20.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/authorization-header-and-preflight-requests/5215599","author":"Wizeon.3852","body":"\n<blockquote><div class=\"citey\"><cite title=\"Posted on June 18 2015 08:31AM\"><a href=\"/forum/community/api/authorization-header-and-preflight-requests/5167341\">smiley.1438:</a></cite></div><div class=\"quotey\"><p>However, you should avoid to use the API key via frontend scripting languages (as in JavaScript). Keep in mind that it is basically the OAuth2 access token which is intended to be used between the app`s backend and the gw2 API server.</p></div></blockquote>\n<p>Can you elaborate? The user has to send the api key via a frontend to the backend anyway, so it’s just as easily compromised at that point. And by not using a backend I basically guarantee to the user that I won’t do anything with their api keys since I don’t even see them. Not even talking about the time saved by not having to have a backend<img src=\"/include/images/smilies/colondee.png\"></p>","arenanet":false},{"pubDate":"2015-06-18T09:09:39.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/authorization-header-and-preflight-requests/5167504","author":"lynnae.4095","body":"\n<p>:) thanks. I’m aware.</p>","arenanet":false},{"pubDate":"2015-06-18T08:31:03.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/authorization-header-and-preflight-requests/5167341","author":"smiley.1438","body":"\n<p>However, you should avoid to use the API key via frontend scripting languages (as in JavaScript). Keep in mind that it is basically the OAuth2 access token which is intended to be used between the app`s backend and the gw2 API server.</p>","arenanet":false},{"pubDate":"2015-06-18T07:45:09.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/authorization-header-and-preflight-requests/5167158","author":"lynnae.4095","body":"\n<p>ta folks.</p>\n<p>Since sending the preflight request is not something you can control when you set the Authorization header in javascript, I’ll try appending it to the query string as indicated.</p>\n<p>ta for the tip, think this was the post that shows the query string key <a href=\"https://forum-en.guildwars2.com/forum/community/api/Cross-Origin-v2-transactions\">https://forum-en.guildwars2.com/forum/community/api/Cross-Origin-v2-transactions</a></p>\n<p>and the original dev post response that preflight requests are not supported and listing the query string workaround:<br>\n<a href=\"https://forum-en.guildwars2.com/forum/community/api/Launching-v2-commerce-transactions/first#post5077482\">https://forum-en.guildwars2.com/forum/community/api/Launching-v2-commerce-transactions/first#post5077482</a></p>","arenanet":false},{"pubDate":"2015-06-17T22:38:33.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/authorization-header-and-preflight-requests/5164092","author":"Eearslya.6309","body":"\n<p>I believe I’ve seen this issue posted before. The solution I saw then was to pass the API key as <strong>?access_token=APIKEY</strong> instead of in the header. Not a perfect solution, but it’s probably your best bet.</p>","arenanet":false},{"pubDate":"2015-06-17T22:37:55.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/authorization-header-and-preflight-requests/5164084","author":"smiley.1438","body":"\n<p>Don’t even try to use custom headers when using CORS requests – just append <strong>access_token=&lt;API_KEY&gt;</strong> to the request URL. Also, preflight requests are not supported.</p>","arenanet":false},{"pubDate":"2015-06-17T21:07:54.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/authorization-header-and-preflight-requests/5163321","author":"StevenL.3761","body":"\n<p><del>I can confirm that /v2/account does not respond with the ‘Access-Control-Allow-Origin’ header.</del> Wait… it does. Maybe it only works for GET requests.</p>","arenanet":false},{"pubDate":"2015-06-17T20:29:31.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/authorization-header-and-preflight-requests/5163055","author":"lynnae.4095","body":"\n<p>using javascript XMLHttpRequest and setting the Authorization header via xhr.setRequestHeader(‘Authorization’,’Bearer ’ + token); <br>\ncauses a preflight request to be sent because Authorization is considered to be a custom header.</p>\n<p>Unfortunately the preflight request doesn’t look to be handled and Chrome reports:<br>\nXMLHttpRequest cannot load <a href=\"https://api.guildwars2.com/v2/account\">https://api.guildwars2.com/v2/account</a>. No ‘Access-Control-Allow-Origin’ header is present on the requested resource.</p>\n<p>Is this to be expected, and XMLHttpRequest can’t be used to access the protected resources, or do I have the wrong end of the stick for setting the bearer token? Or have the CORS headers gone walkabout?<img src=\"/include/images/smilies/smile.png\"></p>","arenanet":false}]}