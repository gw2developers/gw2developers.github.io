{"title":"Odd Price endpoint behaviour","pubDate":"2015-08-18T01:20:49.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Odd-Price-endpoint-behaviour","comments":[{"pubDate":"2015-08-21T09:50:56.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Odd-Price-endpoint-behaviour/5402265","author":"Chokapik.3741","body":"\n<p>I just found a similar issue in v2/skins.<br>\n<a href=\"https://api.guildwars2.com/v2/skins\">This page</a> returns a total of 3520 skin ids.<br>\nHowever, when trying to request data for all of these ids, I end up with 3519 objects.</p>\n<p>The skin causing the issue seems to be id=2984.<br>\n<a href=\"https://api.guildwars2.com/v2/skins/2984\">https://api.guildwars2.com/v2/skins/2984</a></p>\n<p>Edit: I also wrote a quick <a href=\"http://jsfiddle.net/4xx2324m/1\">jsfiddle</a> that could be handy when we have these kinds of problems. By changing the URL at the top of the script, you can check the other endpoints as well (I checked some of them, haven’t found any issues so far).</p>","arenanet":false},{"pubDate":"2015-08-20T19:24:09.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Odd-Price-endpoint-behaviour/5400596","author":"Lawton Campbell.8517","body":"\n<blockquote><div class=\"citey\"><cite title=\"Posted on August 19 2015 02:22AM\"><a href=\"/forum/community/api/Odd-Price-endpoint-behaviour/5395771\">Ravenhearte.5913:</a></cite></div><div class=\"quotey\"><p>For those curious, ids affected are:</p>\n<p>31113 31120 31124 31127 31130 31131 31132 31133 31135 31136 31137 31139 31140 31144 31167 31168 31169 31175 31178 29952 29960 29964 29974 29978</p></div></blockquote>\n<p>These ids should now all be blacklisted. They won’t be returned from /v2/commerce/listings anymore.</p>","arenanet":true},{"pubDate":"2015-08-19T17:09:05.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Odd-Price-endpoint-behaviour/5397308","author":"Lawton Campbell.8517","body":"\n<p>Cool, thanks for looking those up. As a temporary workaround, I’m going to blacklist those ids from appearing in the id list. Won’t fix the root of the problem but it’ll be something.</p>","arenanet":true},{"pubDate":"2015-08-19T02:22:52.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Odd-Price-endpoint-behaviour/5395771","author":"Ravenhearte.5913","body":"\n<p>For those curious, ids affected are:</p>\n<p>31113 31120 31124 31127 31130 31131 31132 31133 31135 31136 31137 31139 31140 31144 31167 31168 31169 31175 31178 29952 29960 29964 29974 29978</p>\n<p>I dealt with them by searching for the first objects id in the master idList, grabbing a range of 200, and then taking that sublist and removing all ids that successfully returned objects, I then deleted the ids that remained from the master idList.</p>","arenanet":false},{"pubDate":"2015-08-19T00:05:29.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Odd-Price-endpoint-behaviour/5395569","author":"Ravenhearte.5913","body":"\n<p>I’m actually getting 200 codes on all pages, but I can compare X-RESULT-COUNT against what I am expecting to find pages with discrepancies. The trick would seem to be to figure out which ids are missing on a per page basis, as I’m running the loading in coroutines and can’t be guaranteed the order the pages are finishing. If I could do that I could delete them from the master idList and then be back to being able to compare that count to total objects loaded so I know when all coroutines have finished. As a hack, I guess I could create an independent count variable that starts with the count from idList, then I could simply subtract the calculated discrepancy amounts, but that’s so hack-ish. Would rather find a more elegant solution.</p>","arenanet":false},{"pubDate":"2015-08-18T21:41:25.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Odd-Price-endpoint-behaviour/5395223","author":"Lawton Campbell.8517","body":"\n<blockquote><div class=\"citey\"><cite title=\"Posted on August 18 2015 08:36PM\"><a href=\"/forum/community/api/Odd-Price-endpoint-behaviour/5395057\">Ravenhearte.5913:</a></cite></div><div class=\"quotey\"><p>That kind of sucks. I was using the count of the ids returned to determine when I had finished paging in the objects, which works fine for the item and recipe endpoints. Back to the drawing board I guess.</p></div></blockquote>\n<p>We might have it fixed at some point, but pagination should still work using the X-Page-Total response header. It’ll always have the same number of pages, you just might not get the full count for each page (the broken objects will be omitted and you’ll get a 206 status code instead of 200). Alternatively, the Link header has an <a href=\"https://tools.ietf.org/html/rfc5988#section-5\">RFC5988</a>-formatted datum that contains a URL to the next page — when there’s no ‘next’ link you’re at the end.</p>\n<p>Totally agree that it’s a massive annoyance though, it just happens to be in a lower-level component that I’m not really familiar with so I can’t go in and fix it myself <img src=\"/include/images/smilies/sad.png\"></p>","arenanet":true},{"pubDate":"2015-08-18T20:36:29.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Odd-Price-endpoint-behaviour/5395057","author":"Ravenhearte.5913","body":"\n<p>That kind of sucks. I was using the count of the ids returned to determine when I had finished paging in the objects, which works fine for the item and recipe endpoints. Back to the drawing board I guess.</p>","arenanet":false},{"pubDate":"2015-08-18T17:31:20.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Odd-Price-endpoint-behaviour/5394485","author":"Lawton Campbell.8517","body":"\n<p>So… /v2/items and /v2/commerce are backed by completely different databases. I guess technically /v2/items isn’t backed by a database, it’s backed by the .dat file. /v2/items also has a manually-maintained whitelist in it so it doesn’t spill the beans on everything; that whitelist doesn’t talk to the /v2/commerce database.</p>\n<p>It’s possible that there are just items missing from the whitelist, or it’s possible that there’s just some weird stuff in the /v2/commerce database. There was a historical bug wherein users could place buy orders for arbitrary item ids regardless of their validity; I think that was all cleaned up but there might be some remaining detritus?</p>\n<p>In any case, the inconsistency is a known fun bit that we’ll probably never fix.</p>","arenanet":true},{"pubDate":"2015-08-18T09:19:08.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Odd-Price-endpoint-behaviour/5393108","author":"Ravenhearte.5913","body":"\n<p>It was my understanding that only items that have been found in the game are added to the endpoints. Specifically, I was under the impression that only items that have been listed for sale enter the commerce endpoints. So that solution seems improbable. I’m about to head to bed, but if no one has an answer tomorrow, I’ll write up an algorithm to find the specific ids that are missing.</p>","arenanet":false},{"pubDate":"2015-08-18T08:28:19.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Odd-Price-endpoint-behaviour/5393018","author":"SingerOfTheFall.3546","body":"\n<p>Which IDs did not return any info? You can try to get information about them via the items endpoint, and check what items are those exactly. As a wild guess, those might be the items that are potentially sell-able, but have never been obtained by the players (e.g. items that are not available in the game yet).</p>","arenanet":false},{"pubDate":"2015-08-18T01:20:49.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Odd-Price-endpoint-behaviour/5392257","author":"Ravenhearte.5913","body":"\n<p>Hey people,</p>\n<p>So, when querying the price endpoint for ids, I get back a list of 22581 ids. When I page in the endpoint, I end up with 22557 objects. I checked page 112, and it had 181 objects, which seemed odd, I then consoled out the total objects in each page as it was read in, page 76 returns 195 objects, page 78 : 181. Is there a reason for these missing 24 objects? Shouldn’t all valid ids be represented in the returned objects? Basically, is this a bug, or a “feature”?</p>","arenanet":false}]}