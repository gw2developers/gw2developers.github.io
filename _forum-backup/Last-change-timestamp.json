{"title":"Last change timestamp","pubDate":"2015-11-16T04:47:37.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Last-change-timestamp","comments":[{"pubDate":"2015-11-18T18:43:51.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Last-change-timestamp/5773550","author":"Lawton Campbell.8517","body":"\n<p>There’s no way for us to implement this on our end — the server that reads the dat file does not have the capability to persist any data, and the dat file has no notion of changes. Implementing this would require significant architectural changes across multiple components (read: 4+ months of me working on it).</p>\n<p>The good news is that because we’re reading it from the dat file, exposed data only changes when there’s a patch — so you only need to do a full reindex when /v2/build changes. Otherwise you can just watch the list of ids and pull the new ones daily.</p>","arenanet":true},{"pubDate":"2015-11-16T04:47:37.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Last-change-timestamp/5763208","author":"ezd.6359","body":"\n<p>I asked for it long ago but…</p>\n<p>I think it will be good if you will add timestamp key for every api item.</p>\n<p>Why?</p>\n<p>For example, if you change one random ingame item (typo or smth), we need to update our database. Should we retrieve ALL data? It is not a good idea. We dont even know if you changed something. Should we pull everything everyday?</p>\n<p>Is not it better just to check timestamp only?</p>\n<p>Two ways:</p>\n<p>1) items/last_updates?ids=…<br>\nreturn<br>\n{<br>\n “1234”: 0123456789, // item_id: unix_timestamp<br>\n “555”: …<br>\n}</p>\n<p>2) items/changes?since=0123456789<br>\nreturn<br>\n[1234,555,6666]</p>\n<p>- We will be sure our db is fresh and actual<br>\n- We can update only specific items/colors/recipes etc</p>\n<p>P.S. It is not about “items” only, it is about all.</p>","arenanet":false}]}