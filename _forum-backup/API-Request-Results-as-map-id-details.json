{"title":"[API Request] Results as map (id -> details)","pubDate":"2013-05-30T15:11:19.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/API-Request-Results-as-map-id-details","comments":[{"pubDate":"2013-05-30T20:30:55.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/API-Request-Results-as-map-id-details/2123414","author":"rodadams.5963","body":"\n<p>For bits of data where there actually is a primary key, I don’t see a downside to return a map, since it’s about as easy to do a table scan across a map as an array.</p>\n<p>Upside is it saves a bit of post processing on the client side.</p>","arenanet":false},{"pubDate":"2013-05-30T16:04:28.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/API-Request-Results-as-map-id-details/2121727","author":"Healix.5819","body":"\n<p>You can store the data however you’d like when you originally read through the raw data. In this scenario, it doesn’t really matter what format it comes in since it’s basically the difference between {a:1,b:2} and {b:2,a:1}. In your case, you’d simply want to read each record into a map, rather than an array.</p>\n<p>That said, most people are just going to use a simple solution to transform the data into an object and then go through it. In this case, then yes, you’re going through everything multiple times.</p>","arenanet":false},{"pubDate":"2013-05-30T15:36:39.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/API-Request-Results-as-map-id-details/2121558","author":"Cliff Spradlin.3512","body":"\n<blockquote><div class=\"citey\"><cite title=\"Posted on May 30 2013 03:11PM\"><a href=\"/forum/community/api/API-Request-Results-as-map-id-details/2121379\">NachoCheese.3084:</a></cite></div><div class=\"quotey\"><p>That way I can simply use the event_id to immediately find the details I need, rather than parse through the list to find an integer index, and use that for the rest of my process.</p></div></blockquote>\n<p>Yeah, I see why you’d want to do this. As you said, if we provide a complete event list it’s a problem to present the data in your proposed format since there are duplicate keys. I think that some people solve this problem by writing a search function, rather than by transforming the data.</p>\n<p>For the ‘names’ APIs, we probably should have implemented them the way you said. I think I just expected people to basically load these into a table, rather than query the data directly.</p>","arenanet":true},{"pubDate":"2013-05-30T15:24:41.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/API-Request-Results-as-map-id-details/2121471","author":"DarkSpirit.7046","body":"\n<p>It sounds like you are deserializing the JSON data to a dictionary and attempting to use the event id guid as a key for a quick hashtable lookup?</p>\n<p>As you already know, you can’t do that.  The key has to be a combination of both the event id and the world id in order for it to be unique.  Or you can have two levels of indexing via the world id and event id.</p>","arenanet":false},{"pubDate":"2013-05-30T15:11:19.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/API-Request-Results-as-map-id-details/2121379","author":"NachoCheese.3084","body":"\n<p>I used the APIs to write a twitter bot that tweets updated event information for some of the meta-events. When I fetch the current state of events using the events.json request, I get back a result like this:</p>\n<pre><code>{ \"events\": [\n   {\"world_id\": 1008, \"map_id\": 873, \"event_id\": \"659149D4-43EC-4DCB-A6BB-0B2D402B537B\",\n      \"state\": \"Preparation\" },\n   // etc. etc. etc.\n   ]\n}</code></pre>\n<p>And the very first thing I do is transform this array into an easier-to-use object formatted like this:</p>\n<pre><code>{\n   \"659149D4-43EC-4DCB-A6BB-0B2D402B537B\": {\n      \"world_id\": 1008, \"map_id\": 873, \"state\": \"Preparation\"\n   },\n   // etc. etc. etc.\n}</code></pre>\n<p>That way I can simply use the event_id to immediately find the details I need, rather than parse through the list to find an integer index, and use that for the rest of my process.</p>\n<p>This may be more complicated specifically for the Events request, because without a world_id on the request, there will be many events with the same event_id and differing world_id. So this would either have to stay as it is, or world_id would have to be a required parameter. But for other calls, such as world_names, event_names, etc. there should be no problems returning in the format of “object_id”: { /* object details */ } for ease of use (and possibly quicker execution on our app’s side).</p>","arenanet":false}]}