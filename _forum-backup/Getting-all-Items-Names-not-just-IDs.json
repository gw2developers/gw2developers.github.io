{"title":"Getting all Items [Names not just IDs]","pubDate":"2015-10-28T19:18:22.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Getting-all-Items-Names-not-just-IDs","comments":[{"pubDate":"2015-11-04T20:48:58.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Getting-all-Items-Names-not-just-IDs/5718435","author":"Eearslya.6309","body":"\n<p>The way I’ve done it recently is to fetch the first page of 200 and discard everything but the header, and use the X-Page-Total header to determine the page count. The way I see it, it’s not that different from requesting the base endpoint first and chunking up the array into blocks, in terms of API access. (Plus it’s simpler for C.)</p>","arenanet":false},{"pubDate":"2015-11-04T12:13:02.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Getting-all-Items-Names-not-just-IDs/5716428","author":"smiley.1438","body":"\n<p>Well, paging is convenient for the people who use their fingers to count, others can do it without… (j/k<img src=\"/include/images/smilies/colondee.png\">)</p>\n<p>like so:</p>\n<pre><code>// put all the IDs into chunks...\n$ids = array_chunk($ids, 200);\n\n// ...now loop through the chunks\nforeach($ids as $chunk){\n\t// ...and create the request for each chunk and language\n\tforeach($api_languages as $lang){\n\t\t$urls[] = $api_base.'?'.http_build_query(['lang' =&gt; $lang, 'ids' =&gt; implode(',', $chunk)]);\n\t}\n}\n</code></pre>\n<p>Ok, php is unfair advantage :P</p>","arenanet":false},{"pubDate":"2015-11-04T11:19:38.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Getting-all-Items-Names-not-just-IDs/5716297","author":"DarkMagister.7429","body":"\n<p>First, don’t forget to use API V2, or you will have to request each item separately.</p>\n<p>Does it not have a limit of 200 ids for a single request anyway ? I mean is paging needed here at all?</p>\n<p>I would use the following to make a local copy:<br>\n1. Download a full list of items available<br>\n2. In cycle create lists of 200 ids and request API with each such list.</p>","arenanet":false},{"pubDate":"2015-10-28T19:58:05.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Getting-all-Items-Names-not-just-IDs/5679185","author":"Lawton Campbell.8517","body":"\n<p>My recommendation is to do a nightly scrape of /v2/items and store the contents in a local database, then query that to do text completion. The most efficient way (e.g., fewest requests) is to use ?page=X&amp;page_size=200. New items are added to the endpoint as they’re discovered by players (which, in practice usually means daily), and item names are subject to change during patches.</p>\n<p>There may be a third-party API that provides an auto-complete backend; someone else will have to chime in on that though.</p>","arenanet":true},{"pubDate":"2015-10-28T19:18:22.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/Getting-all-Items-Names-not-just-IDs/5678901","author":"Pink Ninja Man.4375","body":"\n<p>Hi all,</p>\n<p>I was wondering what the best way to get a list of all the items in the game. I’m not just looking for their IDs as I am aware of the API endpoint of items with no IDs passed in. In unfortunately only gives a list of IDs and not the in game name. I was hoping to make an input field auto-complete for items and I wanted to be able to get an active list of items. So, I figured I have two options: Either send 2 requests to the API server each item each time I load up my site (one to get IDs and one to get names for each ID), or I just have to update my site every now and then and hard-code in the names of all the items in the game (will likely make some script to do this that will use method 1). Are their any other options? Which option is better?</p>\n<p>Thanks for your suggestions,</p>\n<p>PinkNinjaMan</p>","arenanet":false}]}