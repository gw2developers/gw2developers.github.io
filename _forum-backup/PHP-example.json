{"title":"PHP example","pubDate":"2013-05-21T01:30:54.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/PHP-example","comments":[{"pubDate":"2013-05-21T15:04:57.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/PHP-example/2067710","author":"smiley.1438","body":"\n<p>protip: try the [pre] tag to post code <img src=\"/include/images/smilies/wink.png\"></p>\n<p>What i’ve written just one post before applies also to your first code example.</p>","arenanet":false},{"pubDate":"2013-05-21T14:53:45.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/PHP-example/2067647","author":"JonnyTen.9428","body":"\n<p>Here’s something extremely simple for the curious PHP beginners that simply want a quick result. Wouldn’t recommend building on this method though:</p>\n<div class=\"spoiler_container\"><div class=\"spoileroncontainer\"><button type=\"button\" class=\"button spoileron\" title=\"Click to show the spoiler.\">Show Spoiler</button></div><div class=\"spoiler\"><div class=\"spoileroffcontainer\"><button type=\"button\" class=\"button spoileroff\" title=\"Click to hide the spoiler.\">hide spoiler</button><br></div><div class=\"spoilertext\"><p>function getItem($id) {<br>\n\t$response = file_get_contents(“<a href=\"https://api.guildwars2.com/v1/item_details.json?item_id\">https://api.guildwars2.com/v1/item_details.json?item_id</a>=”.$id);<br>\n\t$response = json_decode($response, false);</p>\n<p>return $response;<br>\n}</p>\n<p>//Use as following:<br>\necho getItem(12345)-&gt;name;</p></div></div></div><p>Alternatively I use the HttpRequest class</p>\n<div class=\"spoiler_container\"><div class=\"spoileroncontainer\"><button type=\"button\" class=\"button spoileron\" title=\"Click to show the spoiler.\">Show Spoiler</button></div><div class=\"spoiler\"><div class=\"spoileroffcontainer\"><button type=\"button\" class=\"button spoileroff\" title=\"Click to hide the spoiler.\">hide spoiler</button><br></div><div class=\"spoilertext\"><p>function getItem($id)<br>\n{<br>\n\t\t\t$req = new HttpRequest(‘<a href=\"https://api.guildwars2.com/v1/item_details.json\">https://api.guildwars2.com/v1/item_details.json</a>’, HttpRequest::METH_GET);<br>\n\t\t\t<br>\n\t\t\t//Add GET values, in this case just the item_id and language<br>\n\t\t\t$req-&gt;addQueryData(array(<br>\n\t\t\t\t‘item_id’ =&gt; $id, <br>\n\t\t\t\t‘lang’ =&gt; ‘en’ <br>\n\t\t\t));<br>\n\t\t\t<br>\n\t\t\ttry {<br>\n\t\t\t//Sends it and fills $result Object<br>\n\t\t\t\t$result = $req-&gt;send();<br>\n\t\t\t<br>\n\t\t\t//If any errors<br>\n\t\t\t} catch (HttpException $ex) {<br>\n\t\t\t\techo $ex;<br>\n\t\t\t}<br>\n\t\t\t<br>\n\t\t\treturn ($result);<br>\n\t\t\t<br>\n\t\t\t<br>\n\t\t\t}<br>\n\t\t\t<br>\nprint_r(getItem(12345));</p></div></div></div>","arenanet":false},{"pubDate":"2013-05-21T11:37:22.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/PHP-example/2066714","author":"smiley.1438","body":"\n<p><em>file_get_contents()</em> needs <em><a href=\"http://php.net/manual/en/filesystem.configuration.php#ini.allow-url-fopen\">allow_url_fopen</a></em> set to true, so it’s no option to rely on since a lot providers don’t allow it for security reasons.<br>\nIf you want your script to run on any server, try something like this:</p>\n<p><a href=\"https://gist.github.com/codemasher/4d30a47df24195ac509f\">https://gist.github.com/codemasher/4d30a47df24195ac509f</a></p>\n<pre><code>function gw2_api_request($request){\n\t$url = parse_url('https://api.guildwars2.com/v1/'.$request);\n\tif(!$fp = @fsockopen('ssl://'.$url['host'], 443, $errno, $errstr, 5)){\n\t\treturn 'connection error: '.$errno.', '.$errstr;\n\t}\n\n\t$nl = \"\\r\\n\";\n\t$header = 'GET '.$url['path'].'?'.$url['query'].' HTTP/1.1'.$nl.'Host: '.$url['host'].$nl.'Connection: Close'.$nl.$nl;\n\tfwrite($fp, $header);\n\tstream_set_timeout($fp, 5);\n\n\t//in case of a chunked response, try http://stackoverflow.com/a/3290822\n\t$response = '';\n\tdo{\n\t\tif(strlen($in = fread($fp,1024))==0){\n\t\t\tbreak;\n\t\t}\n\t\t$response.= $in;\n\t}\n\twhile(true);\n\n\t$response = explode($nl,$response);\n\t\n\tif(isset($response[0]) &amp;&amp; $response[0] == 'HTTP/1.1 200 OK'){\n\t\t$response = json_decode($response[count($response)-1]);\n\t}\n\n\treturn $response;\n}</code></pre>","arenanet":false},{"pubDate":"2013-05-21T08:59:54.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/PHP-example/2066172","author":"Ravenmoon.5318","body":"\n<p>If you find cURL too hard to understand at first you can easily get away with file_get_contents for GET requests<br>\ne.g.</p>\n<p>$data = json_decode( file_get_contents($url) );</p>","arenanet":false},{"pubDate":"2013-05-21T03:28:16.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/PHP-example/2065176","author":"vigorator.7420","body":"\n<p>That code should work, i’m using something almost exactly like that for my stuff.</p>","arenanet":false},{"pubDate":"2013-05-21T02:00:24.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/PHP-example/2064882","author":"TimeBomb.3427","body":"\n<p>Haven’t tested this code, but something like this should work for PHP (curl is required):</p>\n<blockquote><div class=\"quotey\"><p>// create a new cURL resource<br>\n$ch = curl_init();</p>\n<p>// set URL and other appropriate options<br>\ncurl_setopt($ch, CURLOPT_URL, “<a href=\"https://api.guildwars2.com/v1/events.json?world_id=1001\">https://api.guildwars2.com/v1/events.json?world_id=1001</a>”);<br>\ncurl_setopt($ch, CURLOPT_HEADER, 0);<br>\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); //  so curl_exec returns data</p>\n<p>// grab URL and pass it to the browser; store returned data<br>\n$curlRes = curl_exec($ch);</p>\n<p>// close cURL resource, and free up system resources<br>\ncurl_close($ch);</p>\n<p>// Decode returned JSON so it can be handled as a multi-dimensional associative array<br>\n$data = json_decode($curlRes, true);</p></div></blockquote>","arenanet":false},{"pubDate":"2013-05-21T01:30:54.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/PHP-example/2064763","author":"Yussef.2074","body":"\n<p>It’s been a while since I’ve done any programming in php.  What would a simple php request (that then puts the request into a string) for say the events.json look like?</p>\n<p>How about a java servlet version of that?</p>","arenanet":false}]}