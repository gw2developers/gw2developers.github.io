{"title":"DurmandPriory; Objective-C API for iOS &amp; OSX","pubDate":"2013-05-24T14:32:57.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/DurmandPriory-Objective-C-API-for-iOS-OSX","comments":[{"pubDate":"2013-06-06T20:21:24.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/DurmandPriory-Objective-C-API-for-iOS-OSX/2167743","author":"Parthis.2091","body":"\n<p>A small update, made another small app as a way of shaping updates to the Durmand Priory API. The app is called “Identified Dye” and runs on iOS. It presents, sorts, allows filtering, previewing and price checking of all dyes in guild wars 2. It will also show the subtle variations in colour when applied to light, medium and heavy armors.</p>\n<p>Identified Dye has been submitted to the App Store.</p>\n<p>The updates to Durmand Priory will be pushed to the repo in the next day or two, and includes updates to cover all new APIs and also provides a mechanism to access pricing information for items on the trade post. Now that the GW2 API is increasing it’s coverage Durmand Priory builds as a static library. I’ll update the Wiki with integration details shortly.</p>\n<p>Thanks to the people using the lib who’ve contacted me with suggestions, ideas and ‘thank yous’ – you’re welcome!</p>\n<p>Cheers,<br>\np.</p>","arenanet":false},{"pubDate":"2013-05-30T00:13:01.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/DurmandPriory-Objective-C-API-for-iOS-OSX/2117906","author":"Parthis.2091","body":"\n<p>A small update, and not strictly API related, but just finished my first iPhone app using Durmand Priory. This lead to a few improvements and additions to the API which will be pushed to github tomorrow.</p>\n<p>I wanted to start with a simple app to bed-in the API and push something live. The app is called “Stonemist” and is, in essence, the in-game WvW score board but on your iPhone.</p>\n<p>I’ve submitted it to Apple for review and will post against when it’s live.</p>","arenanet":false},{"pubDate":"2013-05-27T10:37:05.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/DurmandPriory-Objective-C-API-for-iOS-OSX/2098914","author":"Parthis.2091","body":"\n<p>A work in progress. It’s a bank holiday, which means some free time in the UK! Spent an hour putting together a quick iPhone app to show you your world’s WubWub scores in almost-realtime. It uses the Durmand Priory ‘fetchCollection:GW2APIDomainCollectionWorldVsWorld’ method to quickly get WvW scores for a world (in this example it’s hardcoded).</p>\n<p>Very straight forward;</p>\n<pre><code> [DurmandPriory fetchCollection:GW2APIDomainCollectionWorldVsWorld\n                   completionBlock:^(GW2APIDomainCollection collection) {\n                       \n                       GW2World * activeWorld = [GW2World worldById:@\"2003\"];\n                       [DurmandPriory fetch:activeWorld.matchup completionBlock:^(id domain) {\n\n                           [self.totalChart reloadData];\n                           [self.ebChart reloadData];\n                           [self.rblChart reloadData];\n                           [self.gblChart reloadData];\n                           [self.bblChart] reloadData;\n                       }];\n                   }];</code></pre>\n<p>It uses XYPieChart (<a href=\"https://github.com/xyfeng/XYPieChart\">https://github.com/xyfeng/XYPieChart</a>) and all 5 charts are simply delegates, the data is provided by;</p>\n<pre><code>- (CGFloat)pieChart:(XYPieChart *)pieChart valueForSliceAtIndex:(NSUInteger)index {\n    GW2MatchScores scores;\n    \n    if ( pieChart == self.totalChart ) {\n        scores = world_.matchup.totalScores;\n    }\n    if ( pieChart == self.rblChart ) {\n        scores = [world_.matchup mapByTypeName:@\"RedHome\"].scores;\n    }\n    if ( pieChart == self.gblChart ) {\n        scores = [world_.matchup mapByTypeName:@\"GreenHome\"].scores;\n    }\n    if ( pieChart == self.bblChart ) {\n        scores = [world_.matchup mapByTypeName:@\"BlueHome\"].scores;\n    }\n    if ( pieChart == self.ebChart ) {\n        scores = [world_.matchup mapByTypeName:@\"Center\"].scores;\n    }\n    \n    if ( index == 0 ) {\n        return scores.red;\n    }\n    if ( index == 1 ) {\n        return scores.green;\n    }\n    if ( index == 2 ) {\n        return scores.blue;\n    }\n    return 0;\n}</code></pre>\n<p>And that’s it; a complete WubWub score viewer in &lt;20 lines of app code and a delegate method for a charting framework.</p>\n<p>Will polish the app up, make it pretty and push a build to the app store soon.</p>","arenanet":false},{"pubDate":"2013-05-24T16:29:53.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/DurmandPriory-Objective-C-API-for-iOS-OSX/2085453","author":"Parthis.2091","body":"\n<p>Thanks Rhino.</p>\n<p>It’s always interesting to see how different developers tackle the same problem, given the same toolset and language. For everyone else choice of framework is always great.</p>\n<p>Small update pushed to github; ‘framework’ code now resides in a subfolder for ease of use. I’m not planning on having the project build a library just yet, atleast not while the codebase is this small and the remote services are still evolving. It’ll be easy to switch to a framework later.</p>\n<p>Also updated the README. Lots of useful information in there, so do give it a read chaps.</p>\n<p>Now that I have this… time to get on with an app!</p>\n<p>Cheers,<br>\np.</p>","arenanet":false},{"pubDate":"2013-05-24T15:03:01.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/DurmandPriory-Objective-C-API-for-iOS-OSX/2084954","author":"Killer Rhino.6794","body":"\n<p>Great stuff, Parthis. This is a really interesting design, too.<img src=\"/include/images/smilies/colondee.png\"></p>","arenanet":false},{"pubDate":"2013-05-24T14:32:58.000Z","guid":"http://forum-en.guildwars2.com/forum/community/api/DurmandPriory-Objective-C-API-for-iOS-OSX/2084788","author":"Parthis.2091","body":"\n<p>Hi,</p>\n<p><strong>This is Durmand Priory.</strong> An Objective-C API for the Guild Wars 2 REST suite. It’s a little different to a lot of the current API wrappers. It’s a domain-first framework, meaning that you deal with domain objects, not services.</p>\n<p><a href=\"https://github.com/dannywartnaby/DurmandPriory\">https://github.com/dannywartnaby/DurmandPriory</a></p>\n<p>Durmand Priory uses <strong>ARC</strong> and has a dependency on <strong>AFNetworking</strong>. (<a href=\"https://github.com/AFNetworking/AFNetworking\">https://github.com/AFNetworking/AFNetworking</a>).</p>\n<p><strong>Why Durmand Priory?</strong><br>\n<em>“The Durmand Priory is a scholarly order dedicated to protecting knowledge”</em> <a href=\"http://wiki.guildwars2.com/wiki/Durmand_Priory\">wiki</a></p>\n<p>The idea is that you deal with the domain first and foremost for all but the most obscure of services. Services are fully abstracted from the client and you never deal with endpoints, server addresses, rest versions or parameters, unless you really want to. You deal with classes and instances.</p>\n<p>For example, fetching all items is simply;</p>\n<p>[DurmandPriory fetch:[GW2Item class] completionBlock:^(id domain) {<br>\n}];</p>\n<p>That’s all you need in order to fetch all items, you provide a block to execute on completion. The GW2Item class holds in memory all items for you. You can ask it for all or any item you wish;</p>\n<p>[GW2Item itemById:@\"12345\"]; // Specific items.<br>\n[GW2Item items]; // All items.</p>\n<p>As you’ll know the GW2 Rest API for items returns all known item IDs. In order to know about an item you need to hit a different endpoint, passing the item ID. With Durmand Priory you simply pass the instance of the item you want;</p>\n<p>GW2Item * item = [GW2Item itemById:@\"12345\"];<br>\n[DurmandPriory fetch:item completionBlock:^(id domain) {<br>\n   <br>\n}];</p>\n<p>And it’s done. No need to know about endpoints, no worries about parameters, languages and restrictions. This is the pattern employed throughout the framework; pass the CLASS to load data (items, events, recipes, etc) and pass an INSTANCE to get specific details.</p>\n<p>For more information please do read the README at <a href=\"https://github.com/dannywartnaby/DurmandPriory\">https://github.com/dannywartnaby/DurmandPriory</a> – The framework is very flexible, very stable and very consistent in it’s approach and pattern. If you’re looking for a more traditional ‘service orientated’ framework have a look at Rhino’s GW2Kit (<a href=\"https://forum-en.guildwars2.com/forum/community/api/GW2Kit-An-Obj-C-framework-for-iOS-OS-X\">https://forum-en.guildwars2.com/forum/community/api/GW2Kit-An-Obj-C-framework-for-iOS-OS-X</a>).</p>\n<p>Happy coding!</p>","arenanet":false}]}